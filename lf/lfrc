# Basic settings
set shell sh
set shellopts '-eu'
set ifs "\n"
set ignorecase true
set icons true
set incfilter true
set hiddenfiles '.*:~/snap:~/java.log.*:~/go:~/R'
set mouse true

# Previewer
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

# Functions
cmd open ${{
    case $(file --mime-type -Lb $f) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd mkdir %{{
    IFS=" "
    mkdir -p "$*"
    lf -remote "send $id select \"$*\""
}}

cmd mkfile %{{
    IFS=" "
    touch "$*"
    lf -remote "send $id select \"$*\""
}}

cmd editor ${{
    $EDITOR
}}

cmd trash %{{
    trash-put $fx
}}

cmd trash_restore ${{
    trash-restore
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd hide_preview :{{
    set nopreview
    set ratios 1:5
    $:
}}

cmd code &{{
    code $fx
}}

cmd open_with ${{
    mimeopen --ask $f 2> /dev/null
}}

cmd open_change_default ${{
    mimeopen --ask-default $f 2> /dev/null
}}

cmd execute_permission :{{
    $chmod +x $fx
    :reload
}}

cmd wallpaper ${{
    swaymsg output '*' bg $f fill
}}

cmd file_explorer &{{
    nautilus .
}}

cmd fzf_jump ${{
    res="$(fd --maxdepth 1 | fzf --reverse --header=$(pwd)/* || exit 0)"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
    exit 0
}}

cmd fzf_jump_recursive ${{
    res="$(fd | fzf --reverse --header=$(pwd)/** || exit 0)"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}

cmd fzf_search ${{
    RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
    res="$(
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header "$(pwd)/**" \
            | cut -d':' -f1 | sed 's/\\/\\\\/g;s/"/\\"/g'
    )"
    [ -n "$res" ] || exit 0 && lf -remote "send $id select \"$res\""
}}

# Remove some defaults
map d

# Bindings
map r rename
map a push :mkfile<space>
map A push :mkdir<space>
map dd trash
map dr trash_restore
map df delete
map x cut
map <enter> open
map H hide_preview 
map . set hidden!
map o open_with
map O open_change_default
map C code
map E file_explorer
map U extract
map B wallpaper
map f fzf_jump
map F fzf_jump_recursive
map <c-f> :fzf_search
map X execute_permission

# Movement
map gh cd ~/
map gd cd ~/Documents
map gw cd ~/Downloads
map gp cd ~/Pictures
map gv cd ~/Videos
map gu cd ~/Music
map gc cd ~/.config
map gn cd ~/.config/nvim
map gm cd /run/media/rom1
map go cd ~/Code
map gs cd ~/Pictures/Screenshots
map gi cd ~/Documents/INSA
map gj cd ~/Code/Projects
map ga cd /mnt/data
